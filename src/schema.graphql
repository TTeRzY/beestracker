# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Apiary {
  _id: ObjectId!
  apiaryId: String!
  apiaryType: String!
  createdAt: DateTime!
  location: String!
  updatedAt: DateTime!
  user: User!
}

input ApiaryInput {
  apiaryId: String!
  apiaryType: String!
  location: String!
}

input BaseUserInput {
  firstName: String!
  lastName: String!
  occupation: String
  password: String!
}

input BeeHiveInput {
  apiary: String!
  beehiveId: String!
  beehiveType: String!
  familyType: String!
}

type Beehive {
  _id: ObjectId!
  apiary: Apiary!
  beehiveId: String!
  beehiveType: String!
  createdAt: DateTime!
  familyType: String!
  updatedAt: DateTime!
}

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  occupation: String
  password: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  createApiary(apiary: ApiaryInput!): Apiary!
  createBeehive(beehive: BeeHiveInput!): Beehive!
  createUser(user: CreateUserInput!): String!
  deleteApiary(_id: String!): Apiary
  deleteBeehive(_id: String!): Beehive
  deleteUser(_id: String!): User!
  login(email: String!, password: String!): String!
  updateApiary(_id: String!, apiary: ApiaryInput!): Apiary
  updateBeehive(_id: String!, beehive: BeeHiveInput!): Beehive
  updateUser(_id: String!, user: BaseUserInput!): User!
}

"""Mongo object id scalar type"""
scalar ObjectId

type PaginatedApiaryResponse {
  items: [Apiary!]!
  page: Float!
  totalItems: Float!
  totalPages: Float!
}

type PaginatedBeehiveResponse {
  items: [Beehive!]!
  page: Float!
  totalItems: Float!
  totalPages: Float!
}

type PaginatedUserResponse {
  items: [User!]!
  page: Float!
  totalItems: Float!
  totalPages: Float!
}

type Query {
  apiaries(limit: Int = 20, page: Int! = 1): PaginatedApiaryResponse!
  apiary(_id: String!): Apiary!
  beehive(_id: String!): Beehive
  beehives(limit: Int = 20, page: Int! = 1): PaginatedBeehiveResponse!
  currentUser: User!
  user(_id: String!): User!
  users(limit: Int = 20, page: Int! = 1): PaginatedUserResponse!
}

type User {
  _id: ObjectId!
  apiaries: [Apiary!]!
  createdAt: DateTime!
  email: String!
  firstName: String!
  lastName: String!
  occupation: String
  password: String!
  roles: [UserRole!]!
  updatedAt: DateTime!
}

enum UserRole {
  ADMIN
  SUPER_ADMIN
  USER
}